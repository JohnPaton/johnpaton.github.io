<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>John Paton</title><link>http://johnpaton.net/</link><description>data scientist&lt;b style="color:#3aa500;font-size:20px;word-spacing:0px"&gt; | &lt;/b&gt;consultant</description><lastBuildDate>Thu, 16 Nov 2017 19:48:11 -0100</lastBuildDate><item><title>Cleaner Spark UDF definitions with a little decorator</title><link>http://johnpaton.net/posts/clean-spark-udfs/</link><description>&lt;p&gt;One of the handy features that makes (Py)Spark more flexible than database tools like Hive for working with tabular data is the ease of creating User Defined Functions (UDFs). However, one thing that still remains a little annoying is that you have to separately define a function and declare it as a UDF. With four lines of code you can clean those definitions right up.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Thu, 16 Nov 2017 19:48:11 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-11-16:/posts/clean-spark-udfs/</guid><category>spark</category><category>python</category><category>data</category><category>snippets</category></item><item><title>Forward-fill missing data in Spark</title><link>http://johnpaton.net/posts/forward-fill-spark/</link><description>&lt;p&gt;Since I've started using Apache Spark, one of the frequent annoyances I've come up against is having an idea that would be very easy to implement in Pandas, but turns out to require a really verbose workaround in Spark. A recent example of this is doing a forward fill (filling &lt;code&gt;null&lt;/code&gt; values with the last known non-&lt;code&gt;null&lt;/code&gt; value).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Fri, 22 Sep 2017 20:00:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-09-22:/posts/forward-fill-spark/</guid><category>python</category><category>spark</category><category>data</category><category>pandas</category><category>time series</category></item><item><title>Creating a responsive bar chart for my tags</title><link>http://johnpaton.net/posts/responsive-bar-chart/</link><description>&lt;p&gt;Today I decided that, since I'm a data kind of guy, I would like my tags page to show a bar chart of how many posts per tag I've made. The idea was to basically have a list of tags on the left, with a bar chart on the right showing how many articles are tagged with that tag, and the bars scaling to the window size. It turned out to be more complicated than I was expecting.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Fri, 21 Jul 2017 23:30:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-07-21:/posts/responsive-bar-chart/</guid><category>web</category><category>css</category><category>pelican</category><category>jinja</category><category>html</category></item><item><title>Groupby without aggregation in Pandas</title><link>http://johnpaton.net/posts/groupby-without-aggregation/</link><description>&lt;p&gt;Pandas has a useful feature that I didn't appreciate enough when I first started using it: &lt;code&gt;groupby&lt;/code&gt;s without aggregation. What do I mean by that? Let's look at an example.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Mon, 17 Jul 2017 20:00:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-07-17:/posts/groupby-without-aggregation/</guid><category>python</category><category>pandas</category><category>data</category><category>time series</category></item><item><title>Counting the number of periods since time-series events with Pandas</title><link>http://johnpaton.net/posts/periods-since-time-series-events/</link><description>&lt;p&gt;This is a cute trick I discovered the other day for quickly computing the time since an event on regularly spaced time series data (like monthly reporting), without looping over the data.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Sat, 15 Jul 2017 20:00:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-07-15:/posts/periods-since-time-series-events/</guid><category>python</category><category>pandas</category><category>data</category><category>time series</category></item><item><title>Custom color schemes in Matplotlib</title><link>http://johnpaton.net/posts/custom-color-schemes-in-matplotlib/</link><description>&lt;p&gt;At KPMG, like (I imagine) at most companies, we have a custom color palette that presentations and other materials are supposed to conform to. I actually quite like it when things I produce have a consistent look and feel, so I decided to find out how to make a custom color palette in &lt;a href="https://matplotlib.org/"&gt;matplotlib&lt;/a&gt;. Turns out that it's super easy.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Thu, 11 May 2017 20:00:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-05-11:/posts/custom-color-schemes-in-matplotlib/</guid><category>python</category><category>dataviz</category><category>matplotlib</category></item><item><title>engl_ish: Simulate your language. ish.</title><link>http://johnpaton.net/posts/engl_ish/</link><description>&lt;p&gt;Quite a while ago I saw a short film called &lt;a href="https://www.youtube.com/watch?v=Vt4Dfa4fOEY"&gt;Skwerl&lt;/a&gt;, meant to demonstrate "how English sounds to non-English speakers". As a native English speaker, watching it is quite surreal. The sounds and accents are totally familiar, and there are definitely words in there that you recognize, but there is no discernible overall meaning whatsoever. It's actually kind of hard to listen to. All you've got to hang onto is that what you're hearing somehow &lt;em&gt;feels&lt;/em&gt; like English. And that's the point. Skwerl gave me the idea to attempt to create a similar effect, but with reading instead of listening. I wanted to see how English looks to non-English readers. And so I created &lt;code&gt;engl_ish&lt;/code&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Paton</dc:creator><pubDate>Sat, 04 Feb 2017 20:00:00 -0100</pubDate><guid isPermaLink="false">tag:johnpaton.net,2017-02-04:/posts/engl_ish/</guid><category>python</category><category>markov</category><category>natural language</category></item></channel></rss>